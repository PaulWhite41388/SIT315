#include <DHT.h>
#include <DHT_U.h>
#include <SD.h> // Include the SD library

#define DHTPIN 2               // Pin connected to DHT sensor
#define DHTTYPE DHT22          // DHT sensor type
DHT dht(DHTPIN, DHTTYPE);      // Initialize DHT sensor

// Define the pins for the LEDs
const int LED1_PIN = 3;
const int LED2_PIN = 4;
const int LED3_PIN = 5;
const int LED4_PIN = 6;

// Define the temperature thresholds
const float TEMP_LED1_MIN = 21.0;
const float TEMP_LED1_MAX = 22.0;
const float TEMP_LED2_MIN = 20.0;
const float TEMP_LED2_MAX = 22.9;
const float TEMP_LED3_MIN = 19.0;
const float TEMP_LED3_MAX = 23.9;

// Log interval in milliseconds
const unsigned long LOG_INTERVAL = 1000;

// SD card chip select pin
const int chipSelect = 10;

// File to store data
File dataFile;

//variable declared
unsigned long previousMillis = 0;

//ran once
void setup() {
  Serial.begin(9600);          // Set the baud rate to 9600
  dht.begin();                 // Initialize DHT sensor
  pinMode(LED1_PIN, OUTPUT);   // Initialize the LED pins as OUTPUT
  pinMode(LED2_PIN, OUTPUT);
  pinMode(LED3_PIN, OUTPUT);
  pinMode(LED4_PIN, OUTPUT);

  if (!SD.begin(chipSelect)) {
    Serial.println("SD card initialization failed!");
    while (1);
  }
  dataFile = SD.open("data.csv", FILE_WRITE); // Open data.csv for writing
  if (dataFile) {
    dataFile.println("Minutes Since Started,Temperature"); // Write header to the CSV file
    dataFile.close();
  } else {
    Serial.println("Error opening data.csv");
  }
}

//ran on loop
void loop() {
  // Read temperature from DHT sensor
  float temperature = dht.readTemperature();
  Serial.print("Temperature: ");
  Serial.println(temperature);
 // Print LED statuses
  Serial.print("LED1: ");
  Serial.print(digitalRead(LED1_PIN) == HIGH ? "ON" : "OFF");
  Serial.print(", LED2: ");
  Serial.print(digitalRead(LED2_PIN) == HIGH ? "ON" : "OFF");
  Serial.print(", LED3: ");
  Serial.print(digitalRead(LED3_PIN) == HIGH ? "ON" : "OFF");
  Serial.print(", LED4: ");
  Serial.println(digitalRead(LED4_PIN) == HIGH ? "ON" : "OFF");
    // Turn off all LEDs initially
  digitalWrite(LED1_PIN, LOW);
  digitalWrite(LED2_PIN, LOW);
  digitalWrite(LED3_PIN, LOW);
  digitalWrite(LED4_PIN, LOW);


  // Check temperature range and light up the corresponding LED
  if (temperature >= TEMP_LED1_MIN && temperature <= TEMP_LED1_MAX) {
    digitalWrite(LED1_PIN, HIGH);
  } else if ((temperature >= TEMP_LED2_MIN && temperature < TEMP_LED1_MIN) ||
             (temperature > TEMP_LED1_MAX && temperature <= TEMP_LED2_MAX)) {
    digitalWrite(LED2_PIN, HIGH);
  } else if ((temperature >= TEMP_LED3_MIN && temperature < TEMP_LED2_MIN) ||
             (temperature > TEMP_LED2_MAX && temperature <= TEMP_LED3_MAX)) {
    digitalWrite(LED3_PIN, HIGH);
  } else {
    digitalWrite(LED4_PIN, HIGH);
  }

  // Save data to CSV file at regular intervals
  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= LOG_INTERVAL) {
    previousMillis = currentMillis;
    saveDataToCSV(currentMillis / 1000, temperature);
  }
  delay(1000); // 1-second delay
}

// Written in CSV File
void saveDataToCSV(unsigned long seconds, float temperature) {
  dataFile = SD.open("data.csv", FILE_WRITE); // Open data.csv for writing
  if (dataFile) {
    dataFile.print(seconds);
    dataFile.print(",");
    dataFile.println(temperature);
    dataFile.close();
    Serial.println("Data saved to data.csv");
  } else {
    Serial.println("Error opening data.csv");
  }
}
